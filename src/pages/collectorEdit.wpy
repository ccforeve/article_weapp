<template>
    <view class="page">
        <view class="page__bd">
            <view class="weui-toptips weui-toptips_warn" v-if="fail.tipsFlag">错误提示</view>

            <view class="weui-cells__title">标题</view>
            <view class="weui-cells weui-cells_after-title">
                <view class="weui-cell weui-cell_input">
                    <view class="weui-cell__bd">
                        <input class="weui-input" placeholder="请输入标题" v-model="collector.title" />
                    </view>
                    <view class="weui-cell__ft" v-if="fail.title">
                        <icon type="warn" size="23" color="#E64340"></icon>
                    </view>
                </view>
            </view>

            <view class="weui-cells__title">描述</view>
            <view class="weui-cells weui-cells_after-title">
                <view class="weui-cell">
                    <view class="weui-cell__bd">
                        <textarea class="weui-textarea" placeholder="请输入描述" maxlength="200" rows="3" v-model="collector.desc" />
                        <view class="weui-textarea-counter">{{ collector.desc.length }}/200</view>
                    </view>
                </view>
            </view>

            <view class="weui-cells weui-cells_after-title" style="margin-top: 20px">
                <view class="weui-cell weui-cell_switch">
                    <view class="weui-cell__bd">显示会员价</view>
                    <view class="weui-cell__ft">
                        <switch checked v-model="collector.show_member"></switch>
                    </view>
                </view>
            </view>

            <view class="weui-btn-area">
                <button class="weui-btn" type="primary" @tap="submit">确定</button>
            </view>
        </view>
    </view>
</template>

<script>
  import wepy from '@wepy/core'
  import store from '../store'
  import { mapState } from '@wepy/x'
  import api from '@/utils/request'

  wepy.page({
    store,
    data: {
      fail: {
        title: false,
        tipsFlag: false
      },
      collector_id: null,
      collector: {
        title: '',
        desc: '',
        show_member: true
      }
    },
    onLoad (query) {
      this.collector_id = query.collector_id
      this.getCollector(query.collector_id)
    },
    computed: mapState([ 'collectorListVuex' ]),
    methods: {
      getCollector (collectorId) {
        let collectorVue = this.collectorListVuex
        let collector = collectorVue.find(function (value) {
          if (value.id == collectorId) {
            return value
          }
        })
        this.collector.title = collector.title
        this.collector.desc = collector.desc
        this.collector.show_member = collector.show_member
        wx.setNavigationBarTitle({
          title: '编辑' + collector.title
        })
      },
      submit () {
        let collector = this.collector
        if (collector.title.length <= 0 && collector.title.length > 32) {
          this.fail.title = true
          this.showTipsFlag()
          return false
        }
        // 编辑操作
        this.updateCollector()
      },
      // 提示错误
      showTipsFlag () {
        this.fail.tipsFlag = true
        setTimeout(() => {
          this.fail.tipsFlag = false
        }, 2000)
      },
      async updateCollector () {
        let updateResponse = await api.authRequest({
          url: 'collectors/' + this.collector_id,
          method: 'PUT',
          data: this.collector
        })
        // 提交的数据有误
        if (updateResponse.errors) {
          this.showTipsFlag()
          return false
        }
        // 更新vuex collectorList数据
        let _this = this
        this.collectorListVuex.forEach(value => {
          if (_this.collector_id == value.id) {
            value.title = _this.collector.title
            value.desc = _this.collector.desc
            value.show_member = _this.collector.show_member
          }
        })
        wx.navigateTo({url: '/pages/collectionList?collector_id=' + this.collector_id})
      }
    }
  })
</script>
