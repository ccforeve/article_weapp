<style>
  @font-face {
    font-family: 'iconfont';  /* project id 1314494 */
    src: url('//at.alicdn.com/t/font_1314494_u4ctf32onxf.eot');
    src: url('//at.alicdn.com/t/font_1314494_u4ctf32onxf.eot?#iefix') format('embedded-opentype'),
    url('//at.alicdn.com/t/font_1314494_u4ctf32onxf.woff2') format('woff2'),
    url('//at.alicdn.com/t/font_1314494_u4ctf32onxf.woff') format('woff'),
    url('//at.alicdn.com/t/font_1314494_u4ctf32onxf.ttf') format('truetype'),
    url('//at.alicdn.com/t/font_1314494_u4ctf32onxf.svg#iconfont') format('svg');
  }
  .iconfont{
    font-family:"iconfont" !important;
    font-size:18px;font-style:normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
  }
  .icon_collection::before {
    content: "\e629";
  }
  .weui-media-box {
    padding: 15px 0 !important;
  }
  .weui-media-box__info {
    margin-top: 5px !important;
  }
  .label-text {
    color: #000000;
  }
  .ting {
    color: #b22e08;
  }
  .fu {
    color: #3179b2;
  }
  .bao {
    color: #8f55b2;
  }
  .yu {
    color: #b2792a;
  }
  .yu-padding {
    padding-top: 5px;
  }
  .collection {
    color: #999;
  }
  navigator {
    position: absolute;
    width: 84%;
    height: 100%;
  }
</style>
<template>
  <official-account></official-account>
  <view class="page__bd">
    <view class="weui-panel weui-panel_access">
      <view style="padding: 14px 15px 10px;">
        <view class="label-text">当前收录绿叶产品 {{ total }} 种（实时更新）</view>
        <view class="weui-media-box__info">
          <view class="weui-media-box__info__meta ting">[停]商城暂时停售、</view>
          <view class="weui-media-box__info__meta fu">[复]复消产品、</view>
          <view class="weui-media-box__info__meta bao">[报]报单产品、</view>
          <view class="weui-media-box__info__meta yu yu-padding">[预]产品需要预定</view>
        </view>
      </view>
      <view class="weui-panel__bd">
        <repeat v-for="product in products" index="index">
          <view class="weui-media-box weui-media-box_appmsg" style="border-top: 1px solid #e5e5e5;margin: 0 15px;">
            <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
              <image class="weui-media-box__thumb" src="{{ product.cover }}" />
            </view>
            <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
              <view class="weui-media-box__title {{ product.text_color }}">{{ product.state_text }}{{ product.name }}</view>
              <view class="weui-media-box__desc">{{ product.desc }}</view>
            </view>
            <view class="collection">
              <text class="iconfont icon_collection" @click="collection"></text>
            </view>
            <navigator url="/pages/detail?article_id={{ product.article.id }}&user_id={{ user_id }}"></navigator>
          </view>
          <ad unit-id="adunit-339b94eca8c9de27" wx:if="{{ index !== 0 && index % 15 == 0 }}"></ad>
        </repeat>
        <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
          <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from '@wepy/core'
  import api from '@/utils/request'

  wepy.page({
    data: {
      // 有没有更多数据
      noMoreData: false,
      // 是否在加载中
      isLoading: false,
      products: [],
      user_id: 0,
      total: 0,
      category_id: 0,
      option: {},
      state: '',
      title: ''
    },
    methods: {
      async getProducts(reset = false) {
        if (!this.option.page) {
          this.option.page = 1
        }
        let operations = {
          url: 'products/' + this.category_id + '/category',
          data: this.option
        }
        try {
          let productResponse = await api.request(operations)
          this.title = productResponse.category.name
          wx.setNavigationBarTitle({
            title: productResponse.category.name
          })
          let products = productResponse.products.data
          products.forEach(function (product) {
            let cover = product.cover
            if (cover.indexOf('//img.lvye100.com') >= 0) {
              product.cover = cover.replace(
                '//img.lvye100.com/p/',
                'http://img.lvye100.com/pxs/'
              )
            }
            product.desc = `零售：${product.price}元，会员：${product.money}元 + ${product.ticket}券`
            if (product.kind === 1) {
              if (product.price === product.money) {
                product.desc = `会员价：${product.money}元`
              } else {
                product.desc = `零售：${product.price}元，会员价：${product.money}元`
              }
            }
            if (product.kind === 1) {
              product.state_text = '[复]'
              product.text_color = 'fu'
            } else if (product.kind === 2) {
              product.state_text = '[报]'
              product.text_color = 'bao'
            } else if (product.kind === 3) {
              product.state_text = '[预]'
              product.text_color = 'yu'
            } else if (product.state === 0) {
              product.state_text = '[停]'
              product.text_color = 'ting'
            }
          })
          // 如果传入参数 reset 为true，则覆盖 topics
          this.products = reset ? products : this.products.concat(products)
          // 判断是否是最后一页
          if (productResponse.products.current_page === productResponse.products.last_page) {
            this.noMoreData = true
          }
          this.total = productResponse.products.total
        } catch (e) {
          wx.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      },
      collection () {
        console.log("collection")
      }
    },
    async onLoad(options) {
      this.category_id = options.category_id
      await this.getProducts()
    },
    async onShow() {
      if (wx.getStorageSync('user_id')) {
        this.user_id = wx.getStorageSync('user_id')
      } else {
        let login = await wepy.login()
        let user = await api.request('miniprogram/user/login?code=' + login.code)
        if (user.code === 200) {
          wx.setStorageSync('user_id', user.data.user_id)
          this.user_id = user.data.user_id
        }
      }
    },
    // 重新加载
    async onPullDownRefresh() {
      this.noMoreData = false
      this.option.page = 1
      await this.getProducts(true)
      wepy.stopPullDownRefresh()
    },
    // 加载更多
    async onReachBottom () {
      // 如果没有更多数据，或者正在加载，直接返回
      if (this.noMoreData || this.isLoading) {
        return
      }
      // 开始请求之前设置 isLoading 为true
      this.isLoading = true
      this.option.page = this.option.page + 1
      await this.getProducts()

      // 开始结束后设置 isLoading 为 false
      this.isLoading = false
    },
    onShareAppMessage (res) {
      return {
        // 标题是话题标题
        title: this.title,
        // 路径为话题详情路径
        path: '/pages/productList?category_id=' + this.category_id,
        success: function(res) {
          // 转发成功
          console.log(res)
        },
        fail: function(res) {
          // 转发失败
          console.log(res)
        }
      }
    }
  })
</script>

<config>
  {
    enablePullDownRefresh: true,
    navigationBarTitleText: '产品列表'
  }
</config>
